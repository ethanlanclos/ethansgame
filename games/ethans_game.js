/*
@title: Ethan's Game
@tags: []
@img: ""
@addedOn: 2024-05-30
@author: ethanlanclos

Check the tutorial in the bottom right, the run button is in the top right.
Make sure to remix this tutorial if you want to save your progress!
*/

// define the sprites in our game
const player = "p";
const box = "b";
const goal = "g";
const wall = "w";
const defender = "d";

// assign bitmap art to each sprite
setLegend(
  [ player, bitmap`
..........0.....
..........0.....
.........00.....
......00.00.....
......00000.....
.......000......
.....00000......
.....00000......
....00.000......
...00..000......
......00000.....
.....0000000....
....000000000...
..00000..000000.
00000.......0000
000..........000`],
  [ box, bitmap`
................
................
................
.....99099......
...999909999....
..99999099999...
..00099099000...
.9990000000999..
.9999990999999..
.0000000000000..
.9999990999999..
.9990000000999..
..00099099000...
..99999099999...
...999909999....
.....99099......`],
  [ goal, bitmap`
................
.00000000000000.
.02222222222220.
.02222222222220.
.02222222222220.
.02222222222220.
.02222222222220.
.02222222222220.
.02223333332220.
.02223222232220.
.02223222232220.
.02223222232220.
................
................
................
................`],
  [ wall, bitmap`
0000000000000000
0555555505555550
0555555505555550
0555555505555550
0555555505555550
0000000000000000
0555055555555550
0555055555555550
0555055555555550
0555055555555550
0000000000000000
0555555555505550
0555555555505550
0555555555505550
0555555555505550
0000000000000000`],
  [ defender, bitmap`
................
................
....00000.......
....CCCC0.......
....C0CCC.......
....CCCCC.......
.C..CCCCC.......
..C..777........
...CC777C.......
.....777.C......
.....777.C......
.....000........
.....0.0........
.....C.C........
.....C..C.......
................`]
  
);

// create game levels
let level = 0; // this tracks the level we are on
const levels = [
  map`
w.w........
wpw........
wbw..wwww.w
w.w..wwww.w
..w..wwww.w
.....wwww.w
.....wwww.w
wwwwwwwww.w
wwwwwwwwwgw`,
  map`
ww.p.
ww.b.
w..dw
w...w
w...w
..ddw
....w
....w
www.w
wwwgw
wwwww`,
  map`
...wwwwwwwwwwwwwwww
pw.w..............w
ww.w.....d.....d..w
...w..d..d..d..d.gw
.www.bd.....d.....w
.www..d.....d.....w
.......wwwwwwwwwwww`,
  map`
pdwwwwwwwww
.dwwwwwwwww
.dwww..ddd.
.ddd...dg..
.....b.dd..
wwwww......
wwwww......
wwwwwwwwwww`
];


// set the map displayed to the current level
const currentLevel = levels[level];
setMap(currentLevel);

setSolids([ player, box, wall, defender]); // other sprites cannot go inside of these sprites

// allow certain sprites to push certain other sprites
setPushables({
  [player]: [box, player],
  [box]: [box]
});



// inputs for player movement control
onInput("s", () => {
  getFirst(player).y += 1; // positive y is downwards
  playTune(bounce, 1)
});

onInput("d", () => {
  getFirst(player).x += 1;
  playTune(bounce, 1)
});

onInput("w", () => {
  getFirst(player).y -= 1; // positive y is downwards
  playTune(bounce, 1)
});

onInput("a", () => {
  getFirst(player).x -= 1;
  playTune(bounce, 1)
});

// input to reset level
onInput("j", () => {
  const currentLevel = levels[level]; // get the original map of the level
  playTune(restart, 1)
  // make sure the level exists before we load it
  if (currentLevel !== undefined) {
    clearText("");
    setMap(currentLevel);
  }
});

const zero = tune`
114.94252873563218: A4-114.94252873563218 + C4~114.94252873563218 + E4~114.94252873563218 + E5^114.94252873563218 + G4~114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + G5^114.94252873563218 + G4~114.94252873563218 + E4~114.94252873563218 + C4~114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + B5^114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + D4^114.94252873563218 + G4~114.94252873563218 + E4~114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + F5/114.94252873563218 + F4^114.94252873563218,
114.94252873563218: A4-114.94252873563218,
114.94252873563218: A4-114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + C4~114.94252873563218 + E4~114.94252873563218 + G4~114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + D5^114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + F5^114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + C4~114.94252873563218 + E4~114.94252873563218 + A5^114.94252873563218 + G4~114.94252873563218,
114.94252873563218: C4~114.94252873563218 + E4~114.94252873563218 + G4~114.94252873563218,
114.94252873563218: A4-114.94252873563218 + C4~114.94252873563218 + E4~114.94252873563218 + G4~114.94252873563218 + D4^114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + F5/114.94252873563218 + F4^114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218,
114.94252873563218,
114.94252873563218: A4-114.94252873563218 + G4~114.94252873563218 + E4~114.94252873563218 + C4~114.94252873563218,
114.94252873563218: A4-114.94252873563218,
114.94252873563218: A4-114.94252873563218 + G4~114.94252873563218 + E4~114.94252873563218 + C4~114.94252873563218,
114.94252873563218`
const first = tune`
140.8450704225352: A4-140.8450704225352 + E4~140.8450704225352 + C4~140.8450704225352 + G4~140.8450704225352 + A5/140.8450704225352,
140.8450704225352: C4~140.8450704225352 + E4~140.8450704225352 + G4~140.8450704225352,
140.8450704225352: A4-140.8450704225352 + E4~140.8450704225352 + C4~140.8450704225352 + G4~140.8450704225352,
140.8450704225352: F5/140.8450704225352,
140.8450704225352: A4-140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352 + D5/140.8450704225352 + F4^140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352 + G5^140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352 + G4~140.8450704225352 + C4~140.8450704225352 + E4~140.8450704225352,
140.8450704225352: A4-140.8450704225352,
140.8450704225352: A4-140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352 + G5/140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352,
140.8450704225352: E5/140.8450704225352,
140.8450704225352: A4-140.8450704225352 + G4~140.8450704225352 + E4~140.8450704225352 + C4~140.8450704225352,
140.8450704225352: A4-140.8450704225352 + G4~140.8450704225352 + E4~140.8450704225352 + C4~140.8450704225352,
140.8450704225352: A4-140.8450704225352 + C5/140.8450704225352 + D4^140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352 + G5^140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352 + G4~140.8450704225352 + E4~140.8450704225352 + C4~140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352,
140.8450704225352,
140.8450704225352: A4-140.8450704225352,
140.8450704225352`
const second = tune`
16000`
const bounce = tune`
96.7741935483871: G4^96.7741935483871 + E4^96.7741935483871 + C4^96.7741935483871,
3000`
const restart = tune`
71.77033492822966: F5^71.77033492822966,
71.77033492822966: E5^71.77033492822966 + D5^71.77033492822966,
71.77033492822966: D5^71.77033492822966 + C5^71.77033492822966,
71.77033492822966: C5^71.77033492822966 + B4^71.77033492822966 + A4^71.77033492822966,
71.77033492822966: A4^71.77033492822966,
1937.7990430622008`

// these get run after every input
afterInput(() => {
  // count the number of tiles with goals
  const targetNumber = tilesWith(goal).length;
  
  // count the number of tiles with goals and boxes
  const numberCovered = tilesWith(goal, box).length;

  // if the number of goals is the same as the number of goals covered
  // all goals are covered and we can go to the next level
  if (numberCovered === targetNumber) {
    // increase the current level number
    level = level + 1;

    const currentLevel = levels[level];

    // make sure the level exists and if so set the map
    // otherwise, we have finished the last level, there is no level
    // after the last level
    if (currentLevel !== undefined) {
      setMap(currentLevel);
      
    } else {
      addText("you win!", { y: 4, color: color`3` });
      playTune(zero, 5)
    }
  }
});
